const redditDomains = ['reddit.com', 'redd.it', 'redditmedia.com', 'reddituploads.com']

const imgurDomains = ['imgur.com', 'i.imgur.com']

// This could perhaps be moved to an env variable
const domainsToIgnoreForPdfGeneration = ['discord.gg']

/*****
  Note: Its important to not have any domains that are listed in the imageHostDomains also be listed in the videoHostDomains,
  as the isImagePost check calls the isNotVideoPost which calls isVideoPost which runs postDomainIsOneOf(videoHostDomains)
  and checks domains - if image domains are in the video domains, then it will be seen as a video post.
*****/

/*****
 This is most of the stuff from https://github.com/mikf/gallery-dl/tree/master/gallery_dl/extractor
 but not all.
*****/
const imageHostDomains = [
  ...imgurDomains,
  '2chan.net',
  '35photo.pro',
  '420chan.org',
  '4chan.org',
  '4channel.org',
  '500px.org',
  '8kun.top',
  'architizer.com',
  'artstation.com',
  'behance.net',
  'cyberdrop.me',
  'desktopography.net',
  'deviantart.com',
  'dynasty-scans.com',
  'erome.com',
  'flickr.com',
  'gfycat.com',
  'ibb.co',
  'imagebam.com',
  'imagefap.com',
  'imagevenue.com',
  'img.yt',
  'imgbb.com',
  'imgbox.com',
  'imgchest.com',
  'imgth.com',
  'imx.to',
  'inkbunny.net',
  'instagram.com',
  'photobucket.com',
  'pin.it',
  'pixhost.org',
  'pixhost.to',
  'pixiv.me',
  'pixiv.net',
  'pixivision.net',
  'pixnet.net',
  'pixxxels.cc',
  'pixxxels.org',
  'postimg.cc',
  'postimg.org',
  'slickpic.com',
  'slideshare.net',
  'smugmug.com',
  'speakerdeck.com',
  'tumblr.com',
  'tumblrgallery.xyz',
  'turboimagehost.com',
  'twimg.com',
  'unsplash.com',
  'vk.com',
  'vsco.co',
  'webtoons.com',
  'weibo.cn',
  'weibo.com',
  'wikiart.org',
]

/*****
  https://github.com/yt-dlp/yt-dlp/tree/master/yt_dlp/extractor
  I havent added all of them, just the big ones. Can be expanded later.
  These could also be made into an env variable if people want to add/limit it themselves.
  Remember to be wary to adding domains here that might conflict with saving webpage as pdf (eb bbc.co.uk),
  instead add them as fuller urls to check in videoHostUrls below.
*****/
const videoHostDomains = [
  'v.redd.it',
  'iview.abc.net.au',
  'abcnews.go.com',
  'adultswim.com',
  'aetv.com',
  'air.mozilla.org',
  'live.aliexpress.com',
  'trailers.apple.com',
  'podcasts.apple.com',
  'v.baidu.com',
  'beeg.com',
  'brightcove.com',
  'cliphunter.com',
  'clippituser.tv',
  'cloudflarestream.com',
  'videodelivery.net',
  'bytehighway.net',
  'video.allure',
  'video.architecturaldigest',
  'video.arstechnica',
  'video.bonappetit',
  'video.brides',
  'video.cntraveler',
  'video.details',
  'video.epicurious',
  'video.glamour',
  'video.golfdigest',
  'video.gq',
  'video.newyorker',
  'video.self',
  'video.teenvogue',
  'video.vanityfair',
  'video.vogue',
  'video.wired',
  'video.wmagazine',
  'player.cnevids.com',
  'player-backend.cnevids.com',
  'crackle.com',
  'crunchyroll.com',
  'curiositystream.com',
  'cwtv.com',
  'dailymotion.com',
  'go.discovery.com',
  'video.disney.com',
  'drtuber.com',
  'embedly.com',
  'eporner.com',
  'video.foxnews.com',
  'gfycat.com',
  'giphy.com',
  'shows.howstuffworks.com',
  'live.huffingtonpost.com',
  'itv.com',
  'jwplatform.com',
  'jwplayer.com',
  'html5-player.libsyn.com',
  'manyvids.com',
  'metacafe.com',
  'video.nationalgeographic.com',
  'watch.nba.com',
  'pornhub.com',
  'pornotube.com',
  'redgifs.com',
  'redtube.com',
  'soundcloud.com',
  'spankbang.com',
  'streamable.com',
  'streamanity.com',
  'streamcloud.eu',
  'techtalks.tv',
  'ted.com',
  'tiktok.com',
  'ustream.tv',
  'vevo.com',
  'video.vice.com',
  'vimeo.com',
  'vk.com',
  'xhamster.comm',
  'xnxx.com',
  'xtube.com',
  'xvideos.com',
  'youporn.com',
  'youtube.com',
  'youtu.be',
]

/*****
  Also from https://github.com/yt-dlp/yt-dlp/tree/master/yt_dlp/extractor
  These are for when you cant tell just from the domain if its gonna be a video.
  These should be converted to regular expressions at some point. Again, its not all of the sites.
*****/
const videoHostUrls = [
  'https://archive.org/embed/',
  'https://www.bbc.co.uk/programmes/b039g8p7',
  'https://www.bbc.co.uk/iplayer/',
  'https://www.bbc.co.uk/music/',
  'https://www.bbc.co.uk/sounds/',
  'https://blogger.com/video',
  'https://www.blogger.com/video',
  'https://www.bloomberg.com/news/videos/',
  'https://www.cbs.com/shows/',
  'https://colbertlateshow.com/video/',
  'https://www.cnet.com/videos/',
  'https://www.zdnet.com/video/',
  'https://www.cbsnews.com/embed/',
  'https://www.cbsnews.com/video/',
  'https://www.cnbc.com/video/',
  'https://edition.cnn.com/video/',
  'https://www.cnn.com/video/',
  'https://money.cnn.com/video/',
  'https://www.cc.com/video-clips/',
  'https://www.cc.com/episodes/',
  'https://www.cc.com/video/',
  'https://www.cracked.com/video_',
  'https://digg.com/video/',
  'https://www.starwars.com/video/',
  'https://www.ebaumsworld.com/videos/',
  'https://www.ehow.com/video_',
  'https://www.escapistmagazine.com/videos/view/',
  'https://espn.go.com/video/',
  'https://cdn.espn.go.com/video/',
  'https://www.espn.com/watch/player',
  'https://www.espn.com/video/',
  'https://www.facebook.com/video.php',
  'https://www.facebook.com/watch/',
  'https://www.fox.com/watch/',
  'https://www.gameinformer.com/video-feature/',
  'https://www.gamespot.com/videos/',
  'https://drive.google.com/file/',
  'https://drive.google.com/open',
  'https://drive.google.com/uc',
  'https://www.ign.com/videos/',
  'https://www.pcmag.com/videos/',
  'https://www.imdb.com/video/',
  'https://www.mlb.com/video/',
  'https://m.mlb.com/shared/video/',
  'https://mlb.mlb.com/shared/video/',
  'https://www.mlssoccer.com/video/',
  'https://www.myvidster.com/video/',
  'https://www.nba.com/video/',
  'https://www.nfl.com/videos/',
  'https://www3.nhk.or.jp/nhkworld/en/ondemand/video/',
  'https://www3.nhk.or.jp/nhkworld/en/ondemand/audio/',
  'https://www.nhl.com/video/',
  'https://www.nrl.com/tv/',
  'https://www.nytimes.com/video/',
  'https://southpark.cc.com/video-clips/',
  'https://teamcoco.com/video/',
  'https://twitter.com/i/videos/',
  'https://www.usatoday.com/media/',
  'https://www.washingtonpost.com/video/',
  'https://www.wsj.com/video/',
  'https://yandex.ru/portal/video',
]

export {
  redditDomains,
  imgurDomains,
  videoHostDomains,
  domainsToIgnoreForPdfGeneration,
  imageHostDomains,
  videoHostUrls,
}
