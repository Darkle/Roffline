module.exports = {
  root: true,
  parserOptions: {
    project: ['tests/tsconfig.testing.json'],
    sourceType: 'module',
    ecmaVersion: 2020,
    ecmaFeatures: {
      globalReturn: true,
      impliedStrict: true,
      modules: true,
    },
  },
  parser: '@typescript-eslint/parser',
  processor: 'disable/disable',
  globals: {},
  env: {
    commonjs: true,
    browser: true,
    node: true,
    es2020: true,
    mocha: true,
  },
  extends: [
    'eslint:recommended',
    'plugin:import/errors',
    'plugin:@typescript-eslint/recommended',
    'plugin:@typescript-eslint/recommended-requiring-type-checking',
    'plugin:playwright/playwright-test',
    'plugin:ui-testing/playwright',
  ],
  ignorePatterns: [
    '.eslintrc.cjs',
    'db-seeder.cjs',
    'tests/__mocks/**/*',
    'tests/snapshots/**/*',
    'tests/seed-data/**/*',
  ],
  plugins: ['@typescript-eslint', 'extra-rules', 'no-secrets', 'disable', 'chai-friendly', 'ui-testing'],
  overrides: [
    {
      extends: [
        'eslint:recommended',
        'plugin:import/errors',
        'plugin:@typescript-eslint/recommended',
        'plugin:@typescript-eslint/recommended-requiring-type-checking',
        'plugin:mocha/recommended',
      ],
      plugins: ['@typescript-eslint', 'extra-rules', 'no-secrets', 'disable', 'mocha'],
      files: ['integration-unit/**/*.test.ts'],
      rules: {
        '@typescript-eslint/consistent-type-imports': 'error',
        '@typescript-eslint/default-param-last': ['error'],
        '@typescript-eslint/explicit-function-return-type': ['error'],
        '@typescript-eslint/no-floating-promises': 'off',
        '@typescript-eslint/unbound-method': 'off',
        '@typescript-eslint/no-namespace': 'off',
        '@typescript-eslint/no-duplicate-imports': ['error'],
        '@typescript-eslint/no-magic-numbers': 'off',
        '@typescript-eslint/no-shadow': ['error'],
        '@typescript-eslint/no-unnecessary-type-assertion': 'off',
        '@typescript-eslint/no-unused-expressions': 'off',
        '@typescript-eslint/no-unused-vars': ['error', { args: 'after-used', argsIgnorePattern: '_' }],
        '@typescript-eslint/no-use-before-define': ['error'],
        '@typescript-eslint/no-useless-constructor': ['error'],
        '@typescript-eslint/prefer-readonly-parameter-types': 'off',
        '@typescript-eslint/no-empty-function': 'off',
        '@typescript-eslint/prefer-readonly': ['error'],
        '@typescript-eslint/prefer-reduce-type-parameter': ['error'],
        '@typescript-eslint/require-await': 'error',
        '@typescript-eslint/semi': [
          'error',
          'never',
          {
            beforeStatementContinuationChars: 'always',
          },
        ],
        '@typescript-eslint/space-infix-ops': ['error', { int32Hint: false }],
        'import/extensions': 'off',
        'import/newline-after-import': 'off',
        'import/prefer-default-export': 'off',
        'import/no-unresolved': 'off',
        'eslint-comments/disable-enable-pair': 'off',
        'mocha/no-hooks-for-single-case': 'off',
        'security/detect-non-literal-fs-filename': 'off',
        'security/detect-object-injection': 'off',
        'chai-friendly/no-unused-expressions': 'error',
        camelcase: 'off',
        'consistent-return': 'off',
        'comma-dangle': 'off',
        'dot-notation': 'off',
        'no-underscore-dangle': 'off',
        'eol-last': 'off',
        'function-paren-newline': 'off',
        'generator-star-spacing': 'off',
        'global-require': 'off',
        'implicit-arrow-linebreak': 'off',
        indent: 'off',
        'max-len': 'off',
        'new-cap': 'off',
        'newline-per-chained-call': 'off',
        'no-console': 'off',
        'no-confusing-arrow': 'off',
        'no-duplicate-imports': 'off',
        'no-extra-semi': 'off',
        'no-magic-numbers': 'off',
        'no-nested-ternary': 'off',
        'no-negated-condition': 'off',
        'no-shadow': 'off',
        'no-unused-vars': 'error',
        'no-use-before-define': 'off',
        'no-useless-constructor': 'off',
        'no-unused-expressions': 'off',
        'object-curly-spacing': 'off',
        'object-curly-newline': 'off',
        'operator-linebreak': 'off',
        'prefer-arrow-callback': 'off',
        'require-await': 'off',
        semi: 'off',
        'spaced-comment': 'off',
        'space-infix-ops': 'off',
        'array-callback-return': 'error',
        'capitalized-comments': ['off'],
        complexity: ['error', 4],
        eqeqeq: 'error',
        'guard-for-in': 'error',
        'max-depth': ['error', 3],
        'max-lines-per-function': 'off',
        'max-params': ['error', 4],
        'max-statements-per-line': ['error', { max: 1 }],
        'no-await-in-loop': 'error',
        'no-debugger': 'warn',
        'no-else-return': 'error',
        'no-eq-null': 'error',
        'no-param-reassign': [
          'error',
          {
            props: true,
            ignorePropertyModificationsFor: ['store', 'res'],
          },
        ],
        'no-plusplus': 'error',
        'no-return-await': 'error',
        'no-return-assign': ['error', 'except-parens'],
        'no-undef-init': 'error',
        'no-unneeded-ternary': ['error', { defaultAssignment: true }],
        'no-useless-return': 'error',
        'operator-assignment': ['error', 'never'],
        quotes: [
          'error',
          'single',
          {
            avoidEscape: true,
            allowTemplateLiterals: true,
          },
        ],
        radix: 'error',
        'require-atomic-updates': 'error',
        'require-unicode-regexp': 'error',
      },
    },
  ],
  rules: {
    '@typescript-eslint/consistent-type-imports': 'error',
    '@typescript-eslint/default-param-last': ['error'],
    '@typescript-eslint/explicit-function-return-type': ['error'],
    '@typescript-eslint/no-floating-promises': 'off',
    '@typescript-eslint/unbound-method': 'off',
    '@typescript-eslint/no-namespace': 'off',
    '@typescript-eslint/no-duplicate-imports': ['error'],
    '@typescript-eslint/no-magic-numbers': 'off',
    '@typescript-eslint/no-shadow': ['error'],
    '@typescript-eslint/no-unnecessary-type-assertion': 'off',
    '@typescript-eslint/no-unused-expressions': 'off',
    '@typescript-eslint/no-unused-vars': ['error', { args: 'after-used', argsIgnorePattern: '_' }],
    '@typescript-eslint/no-use-before-define': ['error'],
    '@typescript-eslint/no-useless-constructor': ['error'],
    '@typescript-eslint/prefer-readonly-parameter-types': 'off',
    '@typescript-eslint/no-empty-function': 'off',
    '@typescript-eslint/prefer-readonly': ['error'],
    '@typescript-eslint/prefer-reduce-type-parameter': ['error'],
    '@typescript-eslint/require-await': 'error',
    '@typescript-eslint/semi': [
      'error',
      'never',
      {
        beforeStatementContinuationChars: 'always',
      },
    ],
    '@typescript-eslint/space-infix-ops': ['error', { int32Hint: false }],
    'import/extensions': 'off',
    'import/newline-after-import': 'off',
    'import/prefer-default-export': 'off',
    'import/no-unresolved': 'off',
    'eslint-comments/disable-enable-pair': 'off',
    'chai-friendly/no-unused-expressions': 'error',
    'security/detect-non-literal-fs-filename': 'off',
    'security/detect-object-injection': 'off',
    'ui-testing/missing-assertion-in-test': 'off',
    'ui-testing/no-browser-commands-in-tests': 'off',
    'ui-testing/no-wait-in-tests': 'off',
    camelcase: 'off',
    'consistent-return': 'off',
    'comma-dangle': 'off',
    'dot-notation': 'off',
    'no-underscore-dangle': 'off',
    'eol-last': 'off',
    'function-paren-newline': 'off',
    'generator-star-spacing': 'off',
    'global-require': 'off',
    'implicit-arrow-linebreak': 'off',
    indent: 'off',
    'max-len': 'off',
    'new-cap': 'off',
    'newline-per-chained-call': 'off',
    'no-console': 'off',
    'no-confusing-arrow': 'off',
    'no-duplicate-imports': 'off',
    'no-extra-semi': 'off',
    'no-magic-numbers': 'off',
    'no-nested-ternary': 'off',
    'no-negated-condition': 'off',
    'no-shadow': 'off',
    'no-unused-vars': 'error',
    'no-use-before-define': 'off',
    'no-useless-constructor': 'off',
    'no-unused-expressions': 'off',
    'object-curly-spacing': 'off',
    'object-curly-newline': 'off',
    'operator-linebreak': 'off',
    'prefer-arrow-callback': 'off',
    'require-await': 'off',
    semi: 'off',
    'spaced-comment': 'off',
    'space-infix-ops': 'off',
    'array-callback-return': 'error',
    'capitalized-comments': ['off'],
    complexity: ['error', 4],
    eqeqeq: 'error',
    'guard-for-in': 'error',
    'max-depth': ['error', 3],
    'max-lines-per-function': 'off',
    'max-params': ['error', 4],
    'max-statements-per-line': ['error', { max: 1 }],
    'no-await-in-loop': 'error',
    'no-debugger': 'warn',
    'no-else-return': 'error',
    'no-eq-null': 'error',
    'no-param-reassign': [
      'error',
      {
        props: true,
        ignorePropertyModificationsFor: ['store', 'res'],
      },
    ],
    'no-plusplus': 'error',
    'no-return-await': 'error',
    'no-return-assign': ['error', 'except-parens'],
    'no-undef-init': 'error',
    'no-unneeded-ternary': ['error', { defaultAssignment: true }],
    'no-useless-return': 'error',
    'operator-assignment': ['error', 'never'],
    quotes: [
      'error',
      'single',
      {
        avoidEscape: true,
        allowTemplateLiterals: true,
      },
    ],
    radix: 'error',
    'require-atomic-updates': 'error',
    'require-unicode-regexp': 'error',
  },
}
